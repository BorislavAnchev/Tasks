{"code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var u=t[r]={i:r,l:!1,exports:{}};return e[r].call(u.exports,u,u.exports,n),u.l=!0,u.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var u in e)n.d(r,u,function(t){return e[t]}.bind(null,u));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/_karma_webpack_/\",n(n.s=1)}([function(e,t,n){\"use strict\";n.r(t),n.d(t,\"counter\",(function(){return r}));var r=function(e,t){if(\"number\"!=typeof e)return 0;switch(t){case\"increment\":return e+1;case\"decrement\":return e-1;default:return e}}},function(e,t,n){\"use strict\";n.r(t);var r=n(0);describe(\"#counter\",(function(){it(\"should increment current value by 1 and return 1\",(function(){expect(Object(r.counter)(0,\"increment\")).to.equal(1)})),it(\"should increment current value by 1 and return 2\",(function(){expect(Object(r.counter)(1,\"increment\")).to.equal(2)})),it(\"should decrement current value by 1 and return 3\",(function(){expect(Object(r.counter)(4,\"decrement\")).to.equal(3)})),it(\"should decrement current value by 1 and return  2\",(function(){expect(Object(r.counter)(3,\"decrement\")).to.equal(2)})),it(\"state should be undefined and counter should return 0\",(function(){expect(Object(r.counter)(\"decrement\")).to.equal(0)})),it(\"arguments should be undefined and counter should return 0\",(function(){expect(Object(r.counter)()).to.equal(0)})),it(\"the order of the arguments is wrong counter should return 0\",(function(){expect(Object(r.counter)(\"decrement\",3)).to.equal(0)})),it(\"action is undefined and counter should return the current state which is 0\",(function(){expect(Object(r.counter)(0)).to.equal(0)})),it(\"should decrement current value by 1 and return -1\",(function(){expect(Object(r.counter)(0,\"decrement\")).to.equal(-1)})),it(\"should decrement current value by 1 and return -2\",(function(){expect(Object(r.counter)(-1,\"decrement\")).to.equal(-2)})),it(\"should increment current value by 1 and return -1\",(function(){expect(Object(r.counter)(-2,\"increment\")).to.equal(-1)})),it(\"action is undefined and counter should return the current state which is -1\",(function(){expect(Object(r.counter)(-1)).to.equal(-1)})),it(\"should increment current value by 1 and return 0\",(function(){expect(Object(r.counter)(-1,\"increment\")).to.equal(0)}))}))}]);","extractedComments":[]}